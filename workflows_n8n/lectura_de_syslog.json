={
  "createdAt": "2025-09-11T18:14:51.996Z",
  "updatedAt": "2025-09-17T19:10:02.000Z",
  "id": "qNvPVx6pVl6SWob0",
  "name": "lectura de syslog",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.202.63.252/api/generate",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body_json }}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        208
      ],
      "id": "c030eb37-c1d8-4279-a378-ef087eea4b79",
      "name": "Consulta a Qwen"
    },
    {
      "parameters": {
        "jsCode": "const rawData = items[0].json.data;\n\n// Paso 1: Separar por líneas\nconst lines = rawData.split('\\n');\n\n// Paso 2: Parsear cada línea como JSON\nlet responses = [];\nfor (const line of lines) {\n  try {\n    const parsed = JSON.parse(line);\n    if (parsed.response) {\n      responses.push(parsed.response);\n    }\n  } catch (e) {\n    // Ignorar líneas que no se puedan parsear\n  }\n}\n\n// Paso 3: Concatenar todas las respuestas\nconst textoFinal = responses.join('');\n\n// Devolver el resultado\nreturn [\n  {\n    json: {\n      mensaje_qwen: textoFinal\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1216,
        208
      ],
      "id": "72b53162-86c6-4f80-accc-c088ed33e502",
      "name": "Normalización de la respuesta"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import json\n\ndata = items[0]['json']\nlogs = []\n\nif \"data\" in data and \"result\" in data[\"data\"]:\n    for entry in data[\"data\"][\"result\"]:\n        stream = entry.get(\"stream\", {})\n        job = stream.get(\"job\", \"\")\n        prioridad = stream.get(\"PRIORIDAD\", \"\")\n        hostname = stream.get(\"HOSTNAME\", \"\")\n        \n        for value in entry.get(\"values\", []):\n            timestamp, message = value\n            message = message.replace('\"', \"'\").strip()\n            log_line = f\"[{hostname}] [{job}] [{prioridad}] {message}\"\n            logs.append(log_line)\n\nlogs_text = \"\\n\\n\".join(logs)\n\n# Prompt mejorado\nprompt_text = f\"\"\"\nAnalizá los siguientes logs de red y generá un informe técnico detallado en español. El análisis debe seguir esta estructura y la respuesta debe respetarla:\n\n1. **Agrupación por hostname**: Identificá todos los hostnames presentes en los logs y agrupá los eventos por cada uno e informalos, el hostname es la raiz y luego incluye cada punto dentro de los hostnames.\n\n2. **Clasificación de eventos**: Para cada hostname, clasificá los eventos detectados en categorías como:\n   - Fallos de autenticación SSH\n   - Violaciones de seguridad MAC\n   - Cambios en configuraciones BGP\n   - Cambios en MTU\n   - Alertas de tasa de salida excedida\n   - Reaparición de procesos críticos\n   - Errores de asignación de recursos\n   - Otros eventos relevantes\n\n3. **Conteo de eventos**: Indicá la cantidad de eventos por tipo dentro de cada hostname e indica la cantidad de cada evento.\n\n4. **Análisis técnico**: Explicá brevemente qué implican los eventos detectados, su posible causa y su impacto en la operación de red.\n\n5. **Recomendaciones**: Para cada hostname, sugerí acciones correctivas o preventivas, como:\n   - Revisión de políticas de seguridad\n   - Aumento de recursos\n   - Validación de configuraciones\n   - Escalamiento a soporte de infraestructura\n\nEl informe debe ser claro, profesional y orientado a la toma de decisiones técnicas. No repitas los logs, solo analizalos. Si hay múltiples eventos similares, agrupalos. Si no hay eventos críticos, indicá que no se detectaron problemas relevantes.\n\nTexto de logs a analizar:\n{logs_text}\n\"\"\"\n\n# Construimos el JSON del cuerpo\nbody_json = {\n    \"model\": \"qwen2.5-coder:14b\",\n    \"prompt\": prompt_text\n}\n\nreturn [\n    {\n        \"json\": {\n            \"body_json\": body_json\n        }\n    }\n]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        208
      ],
      "id": "97d15a06-b9f3-4c51-8f88-10cfbfea0f9e",
      "name": "Json para qwen"
    },
    {
      "parameters": {
        "url": "http://10.92.192.211:3100/loki/api/v1/query_range",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "{job=~\".+\"}"
            },
            {
              "name": "start",
              "value": "={{ $json.start }}"
            },
            {
              "name": "end",
              "value": "={{ $json.end }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "60bfe651-d209-44c6-ab77-dff2f4f52130",
      "name": "Consulta loki",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        608,
        208
      ]
    },
    {
      "parameters": {
        "functionCode": "const now = Date.now() * 1e6; const fiveMinAgo = now - 5 * 60 * 1e9; return [ { json: { start: fiveMinAgo.toString(), end: now.toString() } } ];"
      },
      "id": "28ddf9bd-d511-40a2-be66-aef653629455",
      "name": "Ventana de tiempo",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        400,
        208
      ],
      "notes": "Consulta de los últimos 5 minutos"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        224,
        208
      ],
      "id": "5d0c50c2-655d-4c3f-9c2e-59e4a0c012a3",
      "name": "Esquema de repetición"
    },
    {
      "parameters": {
        "jsCode": "// Tomamos directamente el mensaje normalizado en inglés\nconst mensaje_ingles = $input.first().json.mensaje_qwen || \"\";\n\n// Construimos el prompt para pedir la traducción al español\nconst prompt_traduccion = `\nTomá el siguiente texto técnico en inglés, que contiene un análisis de logs de red,\ny traducilo al español. Mantené todo el contenido técnico, la estructura y la claridad profesional.\nNo modifiques los datos ni agregues información adicional, solo traducilo.\n\nTexto a traducir:\n${mensaje_ingles}\n`;\n\n// Construimos el JSON que se enviará al nodo HTTP Request de Qwen\nconst body_json = {\n    model: \"qwen2.5-coder:14b\",\n    prompt: prompt_traduccion\n};\n\nreturn [\n    {\n        json: {\n            body_json: body_json\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1408,
        208
      ],
      "id": "f2d0df50-619e-4e51-a85b-929f69568883",
      "name": "Pedido de traducción a Qwen"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://10.202.63.252/api/generate",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body_json }}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        208
      ],
      "id": "1bf7e9ea-7fbd-4f95-8f80-56c0ffb4d92c",
      "name": "Traducción Qwen"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://claroaup.webhook.office.com/webhookb2/839216bf-f91d-498b-b826-575f025fbea2@05bfea77-f19c-471d-afa2-0c9093af8bdb/IncomingWebhook/819a83ad25b74ef4a0c1bc247dfe9725/f39fde1d-9a0a-4812-b7af-999f97995f52/V2w62Yq-MAw3sSHPw8UBCVWE4epFjOxhZpmGL0As9cjHQ1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{$json}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1984,
        208
      ],
      "id": "189dcd1c-e6f3-4f24-a4ad-cf3ef05bf3c4",
      "name": "Aviso a teams"
    },
    {
      "parameters": {
        "jsCode": "const rawData = items[0].json.data;\n\n// Separar por líneas y parsear JSON\nconst responses = rawData\n  .split('\\n')\n  .map(line => {\n    try {\n      const parsed = JSON.parse(line);\n      return parsed.response || '';\n    } catch {\n      return '';\n    }\n  })\n  .filter(Boolean);\n\n// Concatenar todos los fragments directamente para reconstruir palabras completas\nconst textoReconstruido = responses.join('');\n\n// (Opcional) insertar saltos de línea donde haya dos o más espacios consecutivos\n// para separar párrafos, listas, etc.\nconst textoFinal = textoReconstruido.replace(/  +/g, '\\n\\n');\n\n// Construir JSON para Teams\nconst mensajeTeams = {\n  \"@type\": \"MessageCard\",\n  \"@context\": \"http://schema.org/extensions\",\n  \"summary\": \"Informe de logs de red\",\n  \"themeColor\": \"0076D7\",\n  \"title\": \"Análisis de logs de red\",\n  \"text\": textoFinal\n};\n\nreturn [\n  {\n    json: mensajeTeams\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1792,
        208
      ],
      "id": "a28624c7-82af-4d58-a440-3be1f18a90fa",
      "name": "Normalización de la respuesta traducida"
    }
  ],
  "connections": {
    "Consulta a Qwen": {
      "main": [
        [
          {
            "node": "Normalización de la respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalización de la respuesta": {
      "main": [
        [
          {
            "node": "Pedido de traducción a Qwen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json para qwen": {
      "main": [
        [
          {
            "node": "Consulta a Qwen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta loki": {
      "main": [
        [
          {
            "node": "Json para qwen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ventana de tiempo": {
      "main": [
        [
          {
            "node": "Consulta loki",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Esquema de repetición": {
      "main": [
        [
          {
            "node": "Ventana de tiempo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pedido de traducción a Qwen": {
      "main": [
        [
          {
            "node": "Traducción Qwen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Traducción Qwen": {
      "main": [
        [
          {
            "node": "Normalización de la respuesta traducida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalización de la respuesta traducida": {
      "main": [
        [
          {
            "node": "Aviso a teams",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Esquema de repetición": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "9c6f0eff-9d4c-4530-93aa-2fbe5930854b",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-11T18:14:52.003Z",
      "updatedAt": "2025-09-11T18:14:52.003Z",
      "role": "workflow:owner",
      "workflowId": "qNvPVx6pVl6SWob0",
      "projectId": "QdIaKjwyS02MMGZQ",
      "project": {
        "createdAt": "2025-09-11T18:03:44.820Z",
        "updatedAt": "2025-09-11T18:10:14.443Z",
        "id": "QdIaKjwyS02MMGZQ",
        "name": "Soporte Acceso Empresas  Empresas <saf.empresas@claro.com.ar>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-11T18:03:44.820Z",
            "updatedAt": "2025-09-11T18:03:44.820Z",
            "userId": "4facc838-fc29-4888-93e5-fd2ef787b161",
            "projectId": "QdIaKjwyS02MMGZQ",
            "user": {
              "createdAt": "2025-09-11T18:03:44.372Z",
              "updatedAt": "2025-10-08T10:41:47.000Z",
              "id": "4facc838-fc29-4888-93e5-fd2ef787b161",
              "email": "saf.empresas@claro.com.ar",
              "firstName": "Soporte Acceso Empresas",
              "lastName": " Empresas",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-11T18:11:25.739Z",
                "personalization_survey_n8n_version": "1.110.1",
                "automationGoalDevops": [
                  "ticketing-systems-integrations"
                ],
                "companyIndustryExtended": [
                  "telecoms"
                ],
                "companySize": "1000+",
                "companyType": "other",
                "role": "devops",
                "reportedSource": "event"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "qNvPVx6pVl6SWob0",
                "userActivatedAt": 1758135955025,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759778484200
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-08",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}