={
  "createdAt": "2025-10-08T14:15:25.071Z",
  "updatedAt": "2025-10-09T16:05:52.000Z",
  "id": "jeHzvAkqFLIPSZ9i",
  "name": "Clasificación de Aggs - Regiones",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -32,
        192
      ],
      "id": "5370f164-7105-44a1-bfdf-a5b18d4ae582",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  acronimo, \n  equipo, \n  rol, \n  region_MST\n  FROM inventario_equipos\nWHERE rol in(\"AGG\",\"AGGI\")",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        208,
        0
      ],
      "id": "13153211-96d0-4e91-b616-c0cd97a563a7",
      "name": "Inventario_equipos",
      "credentials": {
        "mySql": {
          "id": "ptMDph8au7xSwRzr",
          "name": "MySQL datos_red"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "region_MST",
        "include": "=",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        400,
        0
      ],
      "id": "77ee5b1c-39da-4e97-ba0b-262a7180899e",
      "name": "Split Out"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst resumen = {};\n\nfor (const item of items) {\n  const sysLocation = item.json.sysLocation || \"\";\n  if (!sysLocation.includes(\"ME-\")) continue;\n\n  const region = sysLocation.split('_')[0]; // Ej: \"ME-NJUL\"\n  const criticidad = (item.json.criticidad_servicio?.trim() || \"Desconocida\");\n  const tipo = (item.json.tipo_cliente?.trim() || \"Desconocido\");\n  const cliente = (item.json.Cliente?.trim() || \"SinNombre\");\n\n  if (!resumen[region]) {\n    resumen[region] = {\n      region_MST: region,\n      total_servicios: 0,\n      clientes: new Set(),\n      // Aquí irán directamente los tipos de cliente como claves\n      // Ej: \"PREFER\": { \"No Critico\": 100, ... }\n    };\n  }\n\n  const r = resumen[region];\n  r.total_servicios += 1;\n  r.clientes.add(cliente);\n\n  // Inicializar el tipo de cliente si no existe\n  if (!r[tipo]) {\n    r[tipo] = {};\n  }\n\n  // Contar la criticidad dentro de ese tipo de cliente\n  r[tipo][criticidad] = (r[tipo][criticidad] || 0) + 1;\n}\n\n// Convertir a salida final: reemplazar el Set por el conteo de clientes únicos\nconst salida = Object.values(resumen).map(r => {\n  const { clientes, ...rest } = r; // extraemos 'clientes' del objeto\n  return {\n    region_MST: r.region_MST,\n    total_servicios: r.total_servicios,\n    clientes_unicos: r.clientes.size,\n    ...rest // esto incluye \"PREFER\", \"Empresas y Pymes\", etc.\n  };\n});\n\nreturn salida.map(s => ({ json: s }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        768,
        0
      ],
      "id": "56a173ed-dc3e-4cfd-9a0f-03fee1ef18f1",
      "name": "Conteo por region"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  pc.sysname, \n  pc.syslocation, \n  pc.enlace, \n  pc.cliente, \n  pc.producto, \n  co.`criticidad de servicio` AS criticidad_servicio, \n  co.`Tipo de cliente` AS tipo_cliente\nFROM NNMi.ParqueCompleto pc\nLEFT JOIN Clientes.Oracle co\n  ON pc.enlace = co.enlace\nWHERE pc.syslocation LIKE CONCAT('{{ $json.region_MST }}','_%');\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        576,
        0
      ],
      "id": "872730d4-0673-4684-a69c-da302a1ac6da",
      "name": "Consulta_Servicios",
      "credentials": {
        "mySql": {
          "id": "bPd34mauVIxhLee1",
          "name": "MySQL NNMi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"tipo_cliente\" as origen, tipo_cliente, peso FROM Clientes.tipo_cliente_peso;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        208,
        192
      ],
      "id": "c790b982-ede9-4cc8-b723-7ea96bd0d821",
      "name": "Tipo_cliente",
      "credentials": {
        "mySql": {
          "id": "bPd34mauVIxhLee1",
          "name": "MySQL NNMi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"criticidad\" as origen, nivel_criticidad AS criticidad_servicio, peso FROM Clientes.criticidad_peso;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        208,
        384
      ],
      "id": "99a3017b-aacf-41cc-b24a-3ffea58e2555",
      "name": "Criticidad",
      "credentials": {
        "mySql": {
          "id": "bPd34mauVIxhLee1",
          "name": "MySQL NNMi"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        944,
        192
      ],
      "id": "19fcea6e-eeda-4908-8099-db6f0991c3b6",
      "name": "Merge"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        576,
        208
      ],
      "id": "fff51432-ec9a-44f1-a5df-49839ab177ce",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "const allInputs = $input.all();\n\n// Separar los datos\nconst regionesItems = [];\nconst pesosTipoItems = [];\nconst pesosCritItems = [];\n\nfor (const item of allInputs) {\n  if (item.json.origen === 'tipo_cliente') {\n    pesosTipoItems.push(item);\n  } else if (item.json.origen === 'criticidad') {\n    pesosCritItems.push(item);\n  } else {\n    // Es un dato de región (no tiene \"origen\")\n    regionesItems.push(item);\n  }\n}\n\n// Convertir pesos a objetos para acceso rápido\nconst pesosTipo = {};\nfor (const item of pesosTipoItems) {\n  pesosTipo[item.json.tipo_cliente] = item.json.peso;\n}\n\nconst pesosCrit = {};\nfor (const item of pesosCritItems) {\n  pesosCrit[item.json.criticidad_servicio] = item.json.peso;\n}\n\n// Procesar cada región\nconst resultado = [];\n\nfor (const regionItem of regionesItems) {\n  const r = regionItem.json;\n  const { region_MST, total_servicios, clientes_unicos, ...tipos } = r;\n\n  let puntaje_total_region = 0;\n  const detalle_por_tipo = {};\n\n  for (const [tipoCliente, criticidades] of Object.entries(tipos)) {\n    let puntaje_tipo = 0;\n\n    for (const [criticidad, cantidad] of Object.entries(criticidades)) {\n      const pesoTipo = pesosTipo[tipoCliente] ?? 0;\n      const pesoCrit = pesosCrit[criticidad] ?? 0;\n      const puntajeItem = (pesoTipo + pesoCrit) * cantidad;\n\n      puntaje_tipo += puntajeItem;\n      puntaje_total_region += puntajeItem;\n    }\n\n    detalle_por_tipo[tipoCliente] = puntaje_tipo;\n  }\n\n  resultado.push({\n    region_MST,\n    total_servicios,\n    clientes_unicos,\n    puntaje_total: puntaje_total_region,\n    puntaje_por_tipo: detalle_por_tipo\n  });\n}\n\nreturn resultado.map(r => ({ json: r }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        192
      ],
      "id": "1d9d3ecf-10ee-4167-886a-b75f323daa3d",
      "name": "Puntaje por región"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Inventario_equipos",
            "type": "main",
            "index": 0
          },
          {
            "node": "Tipo_cliente",
            "type": "main",
            "index": 0
          },
          {
            "node": "Criticidad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inventario_equipos": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Consulta_Servicios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta_Servicios": {
      "main": [
        [
          {
            "node": "Conteo por region",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conteo por region": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo_cliente": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criticidad": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Puntaje por región",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "1a925fe0-4232-4f3f-a43b-b00bc02f2c7b",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-08T14:15:25.076Z",
      "updatedAt": "2025-10-08T14:15:25.076Z",
      "role": "workflow:owner",
      "workflowId": "jeHzvAkqFLIPSZ9i",
      "projectId": "QdIaKjwyS02MMGZQ",
      "project": {
        "createdAt": "2025-09-11T18:03:44.820Z",
        "updatedAt": "2025-09-11T18:10:14.443Z",
        "id": "QdIaKjwyS02MMGZQ",
        "name": "Soporte Acceso Empresas  Empresas <saf.empresas@claro.com.ar>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-11T18:03:44.820Z",
            "updatedAt": "2025-09-11T18:03:44.820Z",
            "userId": "4facc838-fc29-4888-93e5-fd2ef787b161",
            "projectId": "QdIaKjwyS02MMGZQ",
            "user": {
              "createdAt": "2025-09-11T18:03:44.372Z",
              "updatedAt": "2025-10-21T09:00:53.000Z",
              "id": "4facc838-fc29-4888-93e5-fd2ef787b161",
              "email": "saf.empresas@claro.com.ar",
              "firstName": "Soporte Acceso Empresas",
              "lastName": " Empresas",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-11T18:11:25.739Z",
                "personalization_survey_n8n_version": "1.110.1",
                "automationGoalDevops": [
                  "ticketing-systems-integrations"
                ],
                "companyIndustryExtended": [
                  "telecoms"
                ],
                "companySize": "1000+",
                "companyType": "other",
                "role": "devops",
                "reportedSource": "event"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "qNvPVx6pVl6SWob0",
                "userActivatedAt": 1758135955025,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759778484200
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-21",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}