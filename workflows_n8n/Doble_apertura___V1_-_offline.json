={
  "createdAt": "2025-09-23T19:31:24.567Z",
  "updatedAt": "2025-10-07T13:16:00.000Z",
  "id": "IasytmE7PtpDWnMz",
  "name": "Doble apertura _ V1 - offline",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -336,
        -256
      ],
      "id": "312b6d34-89ea-4030-8be8-79a21d8c021d",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all().map(i => i.json);\n\n// Separamos según el campo Origen\nconst nnmi = items.filter(ev => ev.Origen === 'NNMi_DobleApertura');\nconst eventos = items.filter(ev => ev.Origen === 'Eventos_DobleApertura');\n\n// Generar clave única\nfunction makeKey(ev) {\n  return `${ev.Anillo}|${ev.Equipos}|${ev.Servicios}|${ev.Clientes}|${ev.Horario}`;\n}\n\n// Generar UUID v4\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n// Mapear ambos orígenes con su clave\nconst mapnnmi = new Map(nnmi.map(ev => [makeKey(ev), ev]));\nconst mapeventos = new Map(eventos.map(ev => [makeKey(ev), ev]));\n\nconst salida = [];\n\n// Clasificamos Nuevo y Existe\nfor (const [key, ev] of mapnnmi.entries()) {\n  if (mapeventos.has(key)) {\n    salida.push({ json: { ...ev, Estado: \"Existe\" } });\n  } else {\n    salida.push({ json: { ...ev, Estado: \"Nuevo\", IdAfectacion: uuidv4() } });\n  }\n}\n\n// Clasificamos Cerrar\nfor (const [key, ev] of mapeventos.entries()) {\n  if (!mapnnmi.has(key)) {\n    salida.push({ json: { ...ev, Estado: \"Cerrar\" } });\n  }\n}\n\nreturn salida;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -64,
        -256
      ],
      "id": "3ce81e6b-4a51-454f-ab15-0c174415133c",
      "name": "Clasificador"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Nuevo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "21e3cf2f-49af-40f6-87dc-10710d3581e3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nuevo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d90e758f-ed60-4690-98d3-7dfc9d0afb5e",
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Existe",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Existe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0889b6de-b088-4021-a31e-edee4b4e7144",
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Cerrar",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cerrar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        160,
        -272
      ],
      "id": "18349849-79da-4c11-8ef7-69bc3b7511a8",
      "name": "Derivador"
    },
    {
      "parameters": {
        "jsCode": "\nconst derivador = $items(\"Derivador\");\nconst daAfecta = $items(\"Consulta NNMi.Afectacion\");\n\n\nconst resultado = daAfecta.map(da => {\n  const match = derivador.find(d => d.json.Anillo === da.json.sysLocation);\n\n  return {\n    json: {\n      sysName: da.json.sysName,\n      sysLocation: da.json.sysLocation,\n      enlace: da.json.enlace,\n      Cliente: da.json.Cliente,\n      Producto: da.json.Producto,\n      \"Estado VTV\": da.json[\"Estado VTV\"],\n      Critico: da.json.Critico,\n      IdAfectacion: match ? match.json.IdAfectacion : null\n    }\n  };\n});\n\nreturn resultado;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        992,
        -784
      ],
      "id": "11d8e22d-839d-4441-acbb-40737afc4c6d",
      "name": "Unifica"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "Afectacion",
          "mode": "list",
          "cachedResultName": "Afectacion"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        1136,
        -784
      ],
      "id": "dfae9a0a-0bdc-4a19-98b1-a2fbcaf969bf",
      "name": "Insert Eventos.Afectacion",
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL eventos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT 'NNMi.Afectacion' as Origen, sysName, sysLocation, enlace, Cliente, Producto, `Estado VTV`, Critico\nFROM Afectacion\nWHERE sysLocation = '{{ $json.Anillo }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        592,
        -800
      ],
      "id": "7e17d8e2-2adf-4e73-9c89-893fd48eda72",
      "name": "Consulta NNMi.Afectacion",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "bPd34mauVIxhLee1",
          "name": "MySQL NNMi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT 'NNMi_DobleApertura' as Origen, Anillo, Equipos, Servicios, Clientes, Horario FROM DobleApertura;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -608,
        -448
      ],
      "id": "dd3fb9ea-7207-4b99-950a-99bc9e328a93",
      "name": "NNMi.DobleApertura",
      "alwaysOutputData": true,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "bPd34mauVIxhLee1",
          "name": "MySQL NNMi"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  'Eventos_DobleApertura' as Origen, \n  da.Anillo, \n  da.Equipos, \n  da.Servicios, \n  da.Clientes, \n  da.Horario, \n  da.IdAfectacion,     \n  inv.region, \n  inv.nombre_sitio \nFROM Eventos.DobleApertura as da\nLEFT JOIN datos_red.inventario_equipos AS inv \n  ON inv.region_mst = SUBSTRING_INDEX(da.Anillo, '_', 1)\nWHERE HorarioFin IS NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -608,
        -240
      ],
      "id": "f9136392-66c6-4e06-9a24-118ce0330882",
      "name": "Eventos.DobleApertura",
      "alwaysOutputData": true,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL eventos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO Eventos.DobleApertura (\n  IdAfectacion, Anillo, Equipos, Servicios, Clientes, Horario\n)\nVALUES (\n  '{{ $json.IdAfectacion }}',\n  '{{ $json.Anillo }}',\n  '{{ $json.Equipos }}',\n  {{ $json.Servicios }},\n  {{ $json.Clientes }},\n  '{{ $json.Horario }}'\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        592,
        -1200
      ],
      "id": "36853379-62a4-4a47-a13f-818dd8bdde5d",
      "name": "Insert Eventos.DobleApertura",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL eventos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE Eventos.DobleApertura\nSET \n  HorarioFin = '{{ $json.HorarioFin }}',\n  TiempoAfectacion = {{ $json.TiempoAfectacion }}\nWHERE \n  Anillo = '{{ $json.Anillo }}' AND\n  Equipos = '{{ $json.Equipos }}' AND\n  Servicios = {{ $json.Servicios }} AND\n  Clientes = {{ $json.Clientes }} AND\n  Horario = '{{ $json.Horario }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        912,
        560
      ],
      "id": "2daccd62-9286-4712-8dd8-9216a76fefd9",
      "name": "Cierre Evento.DobleApertura",
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL eventos"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://claroaup.webhook.office.com/webhookb2/839216bf-f91d-498b-b826-575f025fbea2@05bfea77-f19c-471d-afa2-0c9093af8bdb/IncomingWebhook/819a83ad25b74ef4a0c1bc247dfe9725/f39fde1d-9a0a-4812-b7af-999f97995f52/V2w62Yq-MAw3sSHPw8UBCVWE4epFjOxhZpmGL0As9cjHQ1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"@type\": \"MessageCard\",\n  \"@context\": \"http://schema.org/extensions\",\n  \"summary\": \"✅ Evento Finalizado\",\n  \"themeColor\": \"33A02C\",\n  \"title\": \"✅ Evento Finalizado\",\n  \"sections\": [\n    {\n      \"activityTitle\": \"Resumen del evento cerrado\",\n      \"text\": \"**Anillo:** {{ $json.Anillo }}\\n<br>\\n**Equipos afectados:** {{ $json.Equipos }}\\n<br>\\n**Clientes afectados:** {{ $json.Clientes }}\\n<br>\\n**Servicios impactados:** {{ $json.Servicios }}\\n<br><br>\\n**Hora de inicio:** {{ $json.Horario }}\\n<br>\\n**Hora de fin:** {{ $json.HorarioFin }}\\n<br>\\n**Duración:** {{ $json.DuracionLegible }}\\n<br><br>\\n**Detalle de afectación:** [Ver detalle](https://n8nsaf-desa.atlas-tkgs.claro.amx/webhook/1bc980b4-fb6d-4f4f-8ed8-68b59e9f1dd0?IdAfectacion={{ $json.IdAfectacion }})\",\n      \"markdown\": true\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        896,
        192
      ],
      "id": "9d336f1b-9739-4eab-a4d4-25e3559c752f",
      "name": "Cierre Aviso.Teams"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://claroaup.webhook.office.com/webhookb2/839216bf-f91d-498b-b826-575f025fbea2@05bfea77-f19c-471d-afa2-0c9093af8bdb/IncomingWebhook/819a83ad25b74ef4a0c1bc247dfe9725/f39fde1d-9a0a-4812-b7af-999f97995f52/V2w62Yq-MAw3sSHPw8UBCVWE4epFjOxhZpmGL0As9cjHQ1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"@type\": \"MessageCard\",\n  \"@context\": \"http://schema.org/extensions\",\n  \"summary\": \"⚠️ ALERTA CRÍTICA: Doble Apertura Detectada\",\n  \"themeColor\": \"FF0000\",\n  \"title\": \"⚠️ ALERTA CRÍTICA: Doble Apertura Detectada\",\n  \"sections\": [\n    {\n      \"activityTitle\": \"Detalles del evento\",\n      \"text\": \"**Anillo:** {{ $json.Anillo }}\\n<br>\\n**Equipos afectados:** {{ $json.Equipos }}\\n<br>\\n**Clientes afectados:** {{ $json.Clientes }}\\n<br>\\n**Servicios impactados:** {{ $json.Servicios }}\\n<br><br>\\n**Hora de inicio:** {{ $json.Horario }}\\n<br><br>\\n**Detalle de afectación:** [Ver detalle](https://n8nsaf-desa.atlas-tkgs.claro.amx/webhook/1bc980b4-fb6d-4f4f-8ed8-68b59e9f1dd0?IdAfectacion={{ $json.IdAfectacion }})\",\n      \"markdown\": true\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        592,
        -416
      ],
      "id": "52063d86-d0c5-47c5-97bd-84dcd1959862",
      "name": "Apertura Aviso.Teams"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        832,
        -784
      ],
      "id": "a8292e9a-f667-43d8-80c7-7ef9a8d7af74",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "68ad4a7d-8136-4fcf-9da7-144af91d8540",
              "leftValue": "={{ $json.shouldRun }}",
              "rightValue": "tru",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1008,
        -224
      ],
      "id": "70c7b6ec-3656-468f-9403-10a96f598bef",
      "name": "If"
    },
    {
      "parameters": {
        "content": "## Consultas:\n\n**Vista NNMi.DobleApertura:** donde visualizamos los eventos de red.\n\n**Tabla Evento.DobleApertura:** donde guardamos registro de los eventos.\n\n**Merge** une los output para la clasificación de los datos.\n\n",
        "height": 720,
        "width": 528,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -720,
        -704
      ],
      "typeVersion": 1,
      "id": "7517bb76-606c-4225-b005-92c5685cea64",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Esquema reiterancia\n\n**Disparador:** definido para iniciar el flujo cada 2 minutos.\n\n**Ventana:** define cuando se ejecutara el flujo, configurado para omitir ventanas de tareas programadas.\n\n**Función IF:** solo valida si es verdadero y permite avanzar con el flujo.",
        "height": 720,
        "width": 528,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1280,
        -704
      ],
      "typeVersion": 1,
      "id": "9b7eef69-1768-4a40-9498-ad9c6588665e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Clasificación:\n\n**Clasificador:** interpreta y define el tipo de evento.\n\n**-Nuevo:** evento existente solo en la Vista NNMi.DobleApertura.\n\n**-Existe:** el evento existe en la Vista NNMi.DobleApertura y en la Tabla Eventos.DobleApertura.\n\n**-Cerrar:** el evento existe solo en la Tabla Eventos.DobleApertura\n\n**Derivador:** dependiendo de la clasificación, deriva el flujo a los diferentes módulos.",
        "height": 720,
        "width": 528,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -160,
        -704
      ],
      "typeVersion": 1,
      "id": "d9e9f188-c13a-4013-af8d-b5fb9af10fb6",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "// Ajuste para zona horaria: Buenos Aires (GMT-3 = UTC-3)\n// Si tu servidor ya está en GMT-3, elimina la línea de ajuste\n\nconst nowUTC = new Date();\nconst buenosAiresTime = new Date(nowUTC.getTime() - 3 * 60 * 60 * 1000); // Solo si tu servidor está en UTC\n\n// Si tu servidor YA está en GMT-3, usa directamente:\n// const buenosAiresTime = new Date();\n\nconst day = buenosAiresTime.getDay(); // 0 = dom, 1 = lun, ..., 6 = sáb\nconst hour = buenosAiresTime.getHours();\n\nlet shouldRun = false;\n\nif (day >= 1 && day <= 5) {\n  // Lunes a viernes: permitido desde las 6 AM\n  shouldRun = hour >= 6;\n} else {\n  // Sábado (6) o domingo (0): permitido todo el día\n  shouldRun = true;\n}\n\n// Devolvemos el valor booleano en un campo\nreturn [{ json: { ...$input.item.json, shouldRun } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1008,
        -464
      ],
      "id": "e421ef48-d246-4659-94da-01fedf062bfd",
      "name": "Ventana"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1184,
        -464
      ],
      "id": "7ae2572c-f79b-4cc6-852b-b4cfbb2c0f5a",
      "name": "Disparador",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## Escritura \n**Tabla Eventos.DobleApertura:** escritura en tabla de respaldo, donde se escribe datos del evento con su Id único.\n",
        "height": 304,
        "width": 928,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        -1296
      ],
      "typeVersion": 1,
      "id": "30a4db21-6007-424c-b9ee-331263a77d82",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Escritura \n**Tabla Eventos.Afectacion:** escritura en tabla de respaldo, donde se escribe datos de la afectacion del evento con su Id único.\n",
        "height": 352,
        "width": 928,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        -960
      ],
      "typeVersion": 1,
      "id": "6511cde2-75d5-4ca3-b8f5-558d13582d99",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Tarjeta de aviso \n**Tarjeta adaptativa:** aviso con datos del evento, incluye un link que lleva a la vista de afectación.",
        "height": 352,
        "width": 928,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        -576
      ],
      "typeVersion": 1,
      "id": "8fab779c-ef81-4e8a-ad45-10080c923676",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## CIERRE DE EVENTO",
        "height": 768,
        "width": 960,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        -16
      ],
      "typeVersion": 1,
      "id": "d8802c52-f0d8-4933-95c2-bb47e8b9a876",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## EVENTO NUEVO",
        "height": 1168,
        "width": 960,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        480,
        -1376
      ],
      "typeVersion": 1,
      "id": "07e621de-4617-449e-86d5-5a2a6bbed797",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "## Tiempo de cierre\n**Cálculo de cierre:** función que calcula el tiempo de afectación.",
        "height": 672,
        "width": 304,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        496,
        64
      ],
      "typeVersion": 1,
      "id": "f2688f59-8c1c-40f0-9175-d14ce0700371",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Tarjeta de aviso \n**Tarjeta adaptativa:** aviso con datos del evento, incluye un link que lleva a la vista de afectación.",
        "height": 320,
        "width": 608,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        816,
        64
      ],
      "typeVersion": 1,
      "id": "4b5dec50-c5a9-4a49-ba59-9b3030bd8105",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Escritura \n**Tabla Eventos.DobleApertura:** escritura en tabla de respaldo, donde se escribe datos cierre del evento.\n",
        "height": 320,
        "width": 608,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        816,
        416
      ],
      "typeVersion": 1,
      "id": "6015b59b-6c08-4669-8f20-0e9fac8b3f1e",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "jsCode": "const evento = $json;\n\n// === 1. Obtener hora actual de Buenos Aires (GMT-3) ===\nconst ahora = new Date();\nconst horarioFin = ahora.toLocaleString('sv-SE', { timeZone: 'America/Argentina/Buenos_Aires' });\n// Formato: \"YYYY-MM-DD HH:mm:ss\"\n\n// === 2. Calcular duración exacta en milisegundos ===\nconst inicio = new Date(evento.Horario); // Asegúrate de que este campo sea una fecha válida\nconst fin = new Date(horarioFin.replace(' ', 'T')); // Convertir a formato ISO para Date()\n\nconst diferenciaMs = fin - inicio;\nconst duracionSeg = Math.floor(diferenciaMs / 1000); // Duración total en segundos\n\n// === 3. Convertir a días, horas, minutos y segundos ===\nconst dias = Math.floor(duracionSeg / 86400);\nconst horas = Math.floor((duracionSeg % 86400) / 3600);\nconst minutos = Math.floor((duracionSeg % 3600) / 60);\nconst segundos = duracionSeg % 60;\n\n// === 4. Formato legible: \"6 días 06:15:55\" ===\nconst duracionLegible = `${dias} días ${String(horas).padStart(2, '0')}:${String(minutos).padStart(2, '0')}:${String(segundos).padStart(2, '0')}`;\n\n// === 5. Devolver el ítem actualizado ===\nreturn [\n  {\n    json: {\n      ...evento,\n      Origen: \"DA_DobleApertura\",\n      Estado: \"Cerrar\",\n      HorarioFin: horarioFin, // Ej: \"2024-06-15 14:30:45\" (hora de Buenos Aires)\n      TiempoAfectacion: duracionSeg, // En segundos (puedes cambiar a minutos si prefieres)\n      DuracionLegible: duracionLegible\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        352
      ],
      "id": "8585c7fb-2915-4f1f-90c8-0465aa12c88c",
      "name": "Cálculo de cierre"
    }
  ],
  "connections": {
    "Merge": {
      "main": [
        [
          {
            "node": "Clasificador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clasificador": {
      "main": [
        [
          {
            "node": "Derivador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Derivador": {
      "main": [
        [
          {
            "node": "Insert Eventos.DobleApertura",
            "type": "main",
            "index": 0
          },
          {
            "node": "Consulta NNMi.Afectacion",
            "type": "main",
            "index": 0
          },
          {
            "node": "Apertura Aviso.Teams",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [],
        [
          {
            "node": "Cálculo de cierre",
            "type": "main",
            "index": 0
          }
        ],
        [],
        []
      ]
    },
    "Unifica": {
      "main": [
        [
          {
            "node": "Insert Eventos.Afectacion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consulta NNMi.Afectacion": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NNMi.DobleApertura": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eventos.DobleApertura": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Cierre Evento.DobleApertura": {
      "main": [
        []
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Unifica",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "NNMi.DobleApertura",
            "type": "main",
            "index": 0
          },
          {
            "node": "Eventos.DobleApertura",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ventana": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disparador": {
      "main": [
        [
          {
            "node": "Ventana",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cálculo de cierre": {
      "main": [
        [
          {
            "node": "Cierre Evento.DobleApertura",
            "type": "main",
            "index": 0
          },
          {
            "node": "Cierre Aviso.Teams",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Argentina/Buenos_Aires",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Disparador": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b0ebb148-5cf1-4fae-a3b6-3c62d992d174",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-23T19:31:24.571Z",
      "updatedAt": "2025-09-23T19:31:24.571Z",
      "role": "workflow:owner",
      "workflowId": "IasytmE7PtpDWnMz",
      "projectId": "QdIaKjwyS02MMGZQ",
      "project": {
        "createdAt": "2025-09-11T18:03:44.820Z",
        "updatedAt": "2025-09-11T18:10:14.443Z",
        "id": "QdIaKjwyS02MMGZQ",
        "name": "Soporte Acceso Empresas  Empresas <saf.empresas@claro.com.ar>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-11T18:03:44.820Z",
            "updatedAt": "2025-09-11T18:03:44.820Z",
            "userId": "4facc838-fc29-4888-93e5-fd2ef787b161",
            "projectId": "QdIaKjwyS02MMGZQ",
            "user": {
              "createdAt": "2025-09-11T18:03:44.372Z",
              "updatedAt": "2025-10-21T09:00:53.000Z",
              "id": "4facc838-fc29-4888-93e5-fd2ef787b161",
              "email": "saf.empresas@claro.com.ar",
              "firstName": "Soporte Acceso Empresas",
              "lastName": " Empresas",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-11T18:11:25.739Z",
                "personalization_survey_n8n_version": "1.110.1",
                "automationGoalDevops": [
                  "ticketing-systems-integrations"
                ],
                "companyIndustryExtended": [
                  "telecoms"
                ],
                "companySize": "1000+",
                "companyType": "other",
                "role": "devops",
                "reportedSource": "event"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "qNvPVx6pVl6SWob0",
                "userActivatedAt": 1758135955025,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759778484200
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-21",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}