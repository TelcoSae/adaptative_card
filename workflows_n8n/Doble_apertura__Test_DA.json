={
  "createdAt": "2025-09-19T11:52:47.807Z",
  "updatedAt": "2025-09-25T14:11:39.000Z",
  "id": "omXzzSDQzWDCYtvL",
  "name": "Doble apertura _Test DA",
  "active": false,
  "isArchived": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 2
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -352,
        -224
      ],
      "id": "80b1631a-828b-46be-8907-0bc163f08e97",
      "name": "Schedule Trigger",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT 'DA_TEST' as Origen, Anillo, Equipos, Servicios, Clientes, Horario FROM Eventos.DA_TEST;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -128,
        -224
      ],
      "id": "cd875396-1029-4044-9b20-b4e72dc9aaed",
      "name": "DA_TEST",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        80,
        -208
      ],
      "id": "e9e03653-f5e7-483b-b89e-18f63b29a6a3",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all().map(i => i.json);\n\n// Separamos según el campo Origen\nconst daTest = items.filter(ev => ev.Origen === 'DA_TEST');\nconst dobleApertura = items.filter(ev => ev.Origen === 'DA_DobleApertura');\n\n// Generar clave única\nfunction makeKey(ev) {\n  return `${ev.Anillo}|${ev.Equipos}|${ev.Servicios}|${ev.Clientes}|${ev.Horario}`;\n}\n\n// Generar UUID v4\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst mapDA = new Map(daTest.map(ev => [makeKey(ev), ev]));\nconst mapDApertura = new Map(dobleApertura.map(ev => [makeKey(ev), ev]));\n\nconst salida = [];\n\n// Clasificamos Nuevo y Existe\nfor (const [key, ev] of mapDA.entries()) {\n  if (mapDApertura.has(key)) {\n    salida.push({ json: { ...ev, Estado: \"Existe\" } });\n  } else {\n    salida.push({ json: { ...ev, Estado: \"Nuevo\", IdAfectacion: uuidv4() } });\n  }\n}\n\n// Clasificamos Cerrar\nfor (const [key, ev] of mapDApertura.entries()) {\n  if (!mapDA.has(key)) {\n    salida.push({ json: { ...ev, Estado: \"Cerrar\" } });\n  }\n}\n\nreturn salida;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -208
      ],
      "id": "1caaf2eb-e903-440e-8ff5-fef5c81a8bbd",
      "name": "Clasificador"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Nuevo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "21e3cf2f-49af-40f6-87dc-10710d3581e3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Nuevo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d90e758f-ed60-4690-98d3-7dfc9d0afb5e",
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Existe",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Existe"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0889b6de-b088-4021-a31e-edee4b4e7144",
                    "leftValue": "={{ $json.Estado }}",
                    "rightValue": "Cerrar",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Cerrar"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        432,
        -224
      ],
      "id": "491f9ce8-5e85-44ca-bae2-73ac4dd3b6d7",
      "name": "Derivador"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT  'DA_AFECTA' as Origen, sysName, sysLocation, enlace, Cliente, Producto, `Estado VTV`, Critico\nFROM DA_AFECTA\nWHERE sysLocation = '{{ $json.Anillo }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        704,
        -464
      ],
      "id": "3f694c77-fb98-45f8-b22c-725b7afe58ef",
      "name": "Consulta DA_AFECTA",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT 'DA_DobleApertura' as Origen, Anillo, Equipos, Servicios, Clientes, Horario\nFROM Eventos.DA_DobleApertura \nWHERE HorarioFin IS NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        -128,
        -32
      ],
      "id": "2c957560-d061-4ef6-bf26-96dd7c81dc54",
      "name": "DA_DobleApertura",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const daAfecta = $items(\"Consulta DA_AFECTA\");\nconst derivador = $items(\"Derivador\");\n\nconst resultado = [];\nconst vistos = new Set();\n\nfor (const da of daAfecta) {\n  const daJson = da.json;\n\n  // Buscar evento que coincida por Anillo ↔ sysLocation\n  const match = derivador.find(d => d.json.Anillo === daJson.sysLocation);\n\n  // Clave única para evitar duplicados\n  const key = `${daJson.enlace}-${daJson.sysName}`;\n\n  if (!vistos.has(key)) {\n    vistos.add(key);\n\n    resultado.push({\n      json: {\n        sysName: daJson.sysName,\n        sysLocation: daJson.sysLocation,\n        enlace: daJson.enlace,\n        Cliente: daJson.Cliente,\n        Producto: daJson.Producto,\n        \"Estado VTV\": daJson[\"Estado VTV\"],\n        Critico: daJson.Critico,\n        IdAfectacion: match ? match.json.IdAfectacion : null\n      }\n    });\n  }\n}\n\nreturn resultado;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1184,
        -480
      ],
      "id": "e662bd3a-ae88-4b30-a7a7-8b45c00fdcc1",
      "name": "Unifica"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "DA_Afectacion",
          "mode": "list",
          "cachedResultName": "DA_Afectacion"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        1360,
        -480
      ],
      "id": "ab5af897-46c1-46ba-87ee-dd4be889d17a",
      "name": "Insert DA_Afectacion",
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO Eventos.DA_DobleApertura (\n  IdAfectacion, Anillo, Equipos, Servicios, Clientes, Horario\n)\nVALUES (\n  '{{ $json.IdAfectacion }}',\n  '{{ $json.Anillo }}',\n  '{{ $json.Equipos }}',\n  {{ $json.Servicios }},\n  {{ $json.Clientes }},\n  '{{ $json.Horario }}'\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        1008,
        -320
      ],
      "id": "d023ea67-3c46-4020-a340-ae6bd8b339b5",
      "name": "Insert DA_DobleApertura",
      "alwaysOutputData": false,
      "executeOnce": false,
      "retryOnFail": false,
      "notesInFlow": false,
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const evento = $json;\n\n// Horario de cierre\nconst horarioFin = new Date().toISOString().slice(0, 19).replace('T', ' ');\n\n// Calcular duración en minutos\nconst inicio = new Date(evento.Horario);\nconst fin = new Date(horarioFin);\nconst duracionMin = Math.floor((fin - inicio) / 60000);\n\n// Convertir a días, horas y minutos\nconst dias = Math.floor(duracionMin / 1440);\nconst horas = Math.floor((duracionMin % 1440) / 60);\nconst minutos = duracionMin % 60;\n\n// Formato \"6 días 06:15\"\nconst duracionLegible = `${dias} días ${String(horas).padStart(2, '0')}:${String(minutos).padStart(2, '0')}`;\n\nreturn [\n  {\n    json: {\n      ...evento,\n      Origen: \"DA_DobleApertura\",\n      Estado: \"Cerrar\",\n      HorarioFin: horarioFin,\n      TiempoAfectacion: duracionMin,\n      DuracionLegible: duracionLegible\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        -96
      ],
      "id": "e6955fc8-a163-43da-87ce-9f8cab5b0f35",
      "name": "Complementa"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE Eventos.DA_DobleApertura\nSET \n  HorarioFin = '{{ $json.HorarioFin }}',\n  TiempoAfectacion = {{ $json.TiempoAfectacion }}\nWHERE \n  Anillo = '{{ $json.Anillo }}' AND\n  Equipos = '{{ $json.Equipos }}' AND\n  Servicios = {{ $json.Servicios }} AND\n  Clientes = {{ $json.Clientes }} AND\n  Horario = '{{ $json.Horario }}';",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.5,
      "position": [
        1008,
        0
      ],
      "id": "b3292535-baff-4593-b1ef-455ead921356",
      "name": "Cierre Evento",
      "credentials": {
        "mySql": {
          "id": "BKiIWGM5T5ROjiot",
          "name": "MySQL Eventos"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://claroaup.webhook.office.com/webhookb2/839216bf-f91d-498b-b826-575f025fbea2@05bfea77-f19c-471d-afa2-0c9093af8bdb/IncomingWebhook/819a83ad25b74ef4a0c1bc247dfe9725/f39fde1d-9a0a-4812-b7af-999f97995f52/V2w62Yq-MAw3sSHPw8UBCVWE4epFjOxhZpmGL0As9cjHQ1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"@type\": \"MessageCard\",\n  \"@context\": \"http://schema.org/extensions\",\n  \"summary\": \"Evento Cerrado\",\n  \"themeColor\": \"0076D7\",\n  \"title\": \"✅ Evento Cerrado\",\n  \"sections\": [\n    {\n      \"activityTitle\": \"Resumen del evento cerrado\",\n      \"facts\": [\n        { \"name\": \"Anillo\", \"value\": \"{{ $json.Anillo }}\" },\n        { \"name\": \"Equipos\", \"value\": \"{{ $json.Equipos }}\" },\n        { \"name\": \"Servicios\", \"value\": \"{{ $json.Servicios }}\" },\n        { \"name\": \"Clientes\", \"value\": \"{{ $json.Clientes }}\" },\n        { \"name\": \"Inicio\", \"value\": \"{{ $json.Horario }}\" },\n        { \"name\": \"Fin\", \"value\": \"{{ $json.HorarioFin }}\" },\n        { \"name\": \"Duración\", \"value\": \"{{ $json.DuracionLegible }}\" }\n      ],\n      \"markdown\": true\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1008,
        -160
      ],
      "id": "48612754-fd7f-4bed-a93f-5aa52e08f5be",
      "name": "Aviso Teams1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://claroaup.webhook.office.com/webhookb2/839216bf-f91d-498b-b826-575f025fbea2@05bfea77-f19c-471d-afa2-0c9093af8bdb/IncomingWebhook/819a83ad25b74ef4a0c1bc247dfe9725/f39fde1d-9a0a-4812-b7af-999f97995f52/V2w62Yq-MAw3sSHPw8UBCVWE4epFjOxhZpmGL0As9cjHQ1",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"@type\": \"MessageCard\",\n  \"@context\": \"http://schema.org/extensions\",\n  \"summary\": \"Nueva Doble Apertura\",\n  \"themeColor\": \"0076D7\",\n  \"title\": \"✅ Evento Cerrado\",\n  \"sections\": [\n    {\n      \"activityTitle\": \"Resumen del evento cerrado\",\n      \"facts\": [\n        { \"name\": \"Anillo\", \"value\": \"{{ $json.Anillo }}\" },\n        { \"name\": \"Equipos\", \"value\": \"{{ $json.Equipos }}\" },\n        { \"name\": \"Servicios\", \"value\": \"{{ $json.Servicios }}\" },\n        { \"name\": \"Clientes\", \"value\": \"{{ $json.Clientes }}\" },\n        { \"name\": \"Inicio\", \"value\": \"{{ $json.Horario }}\" }\n      ],\n      \"markdown\": true\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        704,
        -640
      ],
      "id": "98e7635b-27f1-4bb5-a457-00dab3426556",
      "name": "Apertura Aviso.Teams"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        992,
        -480
      ],
      "id": "4d0c0c67-88f3-4365-a4eb-5b1cacbeeb95",
      "name": "Merge1"
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "DA_TEST",
            "type": "main",
            "index": 0
          },
          {
            "node": "DA_DobleApertura",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DA_TEST": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Clasificador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clasificador": {
      "main": [
        [
          {
            "node": "Derivador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Derivador": {
      "main": [
        [
          {
            "node": "Insert DA_DobleApertura",
            "type": "main",
            "index": 0
          },
          {
            "node": "Consulta DA_AFECTA",
            "type": "main",
            "index": 0
          },
          {
            "node": "Apertura Aviso.Teams",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [],
        [
          {
            "node": "Complementa",
            "type": "main",
            "index": 0
          }
        ],
        [],
        []
      ]
    },
    "Consulta DA_AFECTA": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DA_DobleApertura": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Unifica": {
      "main": [
        [
          {
            "node": "Insert DA_Afectacion",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Complementa": {
      "main": [
        [
          {
            "node": "Cierre Evento",
            "type": "main",
            "index": 0
          },
          {
            "node": "Aviso Teams1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cierre Evento": {
      "main": [
        []
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Unifica",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "27dcaf59-6c6e-4fb4-8fb2-76e838884590",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-19T11:52:47.811Z",
      "updatedAt": "2025-09-19T11:52:47.811Z",
      "role": "workflow:owner",
      "workflowId": "omXzzSDQzWDCYtvL",
      "projectId": "QdIaKjwyS02MMGZQ",
      "project": {
        "createdAt": "2025-09-11T18:03:44.820Z",
        "updatedAt": "2025-09-11T18:10:14.443Z",
        "id": "QdIaKjwyS02MMGZQ",
        "name": "Soporte Acceso Empresas  Empresas <saf.empresas@claro.com.ar>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-11T18:03:44.820Z",
            "updatedAt": "2025-09-11T18:03:44.820Z",
            "userId": "4facc838-fc29-4888-93e5-fd2ef787b161",
            "projectId": "QdIaKjwyS02MMGZQ",
            "user": {
              "createdAt": "2025-09-11T18:03:44.372Z",
              "updatedAt": "2025-10-21T09:00:53.000Z",
              "id": "4facc838-fc29-4888-93e5-fd2ef787b161",
              "email": "saf.empresas@claro.com.ar",
              "firstName": "Soporte Acceso Empresas",
              "lastName": " Empresas",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-11T18:11:25.739Z",
                "personalization_survey_n8n_version": "1.110.1",
                "automationGoalDevops": [
                  "ticketing-systems-integrations"
                ],
                "companyIndustryExtended": [
                  "telecoms"
                ],
                "companySize": "1000+",
                "companyType": "other",
                "role": "devops",
                "reportedSource": "event"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "qNvPVx6pVl6SWob0",
                "userActivatedAt": 1758135955025,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759778484200
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-21",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}